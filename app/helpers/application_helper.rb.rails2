# Methods added to this helper will be available to all templates in the application.
module ApplicationHelper
  def title(page_title)
  content_for(:title) { page_title }
  end

  def truncate(text, *args)
    return '' unless text
    options = args.extract_options!

    unless args.empty?
      options[:length] = args[0] || 30
      options[:omission] = args[1] || "..."
    end
    options.reverse_merge!(:length => 30, :omission => "...")

    chars = if text.respond_to?(:mb_chars)
      text.mb_chars
    elsif RUBY_VERSION < '1.9'
      text.chars
    else
      text
    end

    omission = if options[:omission].respond_to?(:mb_chars)
      options[:omission].mb_chars
    elsif RUBY_VERSION < '1.9'
      options[:omission].chars
    else
      options[:omission]
    end

    l = options[:length] - omission.length
    if chars.length > options[:length]
      result = (chars[/\A.{#{l}}\w*\;?/m][/.*[\w\;]/m]).to_s
      ((options[:avoid_orphans] && result =~ /\A(.*?)\n+\W*\w*\W*\Z/m) ? $1 : result) + options[:omission]
    else
      text
    end
  end
  
  def delete_batch_button
    submit_tag "Удалить", :class => "submit-form", :name => :destroy
  end

  def ids(obj)
    check_box_tag "ids[]", obj.id
  end
end
